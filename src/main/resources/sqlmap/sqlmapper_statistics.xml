<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MyBatis에게 Mapper 경로를 적어야 한다. -->
<mapper namespace="com.ingeunjumin.project.mapper.StatisticsMapper">

	<!-- 6개월 매매 평균 금액 조회 -->
	<select id="selectSixMonthStatistics" resultType="map">
	SELECT
		ROUND(AVG(sale_price)) AS monthAvgAmount,
		DATE_FORMAT(create_at,'%Y-%m') AS month
	FROM 
		history_sale_contract
	WHERE 
		DATE_FORMAT(create_at,'%Y-%m') BETWEEN #{startDate} AND #{endDate}
	GROUP BY DATE_FORMAT(create_at,'%Y-%m')
	ORDER BY DATE_FORMAT(create_at,'%Y-%m')
	</select>
	
	<!-- 월별 지역마다 매매 건수 구하기 -->
	<select id="selectSixMonthAptSellStatistics" resultType="map">
		SELECT
		ROUND(AVG(sale_price)) AS monthAvgAmount,
		DATE_FORMAT(create_at,'%Y-%m') AS month,
		COUNT(gu) AS countMonthSales, 
		gu 
		FROM 
		history_sale_contract
	WHERE 
		DATE_FORMAT(create_at,'%Y-%m') BETWEEN #{startDate} AND #{endDate}
	GROUP BY DATE_FORMAT(create_at,'%Y-%m'), gu
	ORDER BY DATE_FORMAT(create_at,'%Y-%m')
	</select>
	
	<!-- 구별 월 매매 건수 && 월 평균 매매금액 -->
	<select id="selectMonthTradeCountAndAvgSalesAmount" resultType="map">
	SELECT 
		ROUND(AVG(sale_price)) AS monthAvgAmount,
		COUNT(*) AS countMonthSales,
		gu
	FROM 
		history_sale_contract
	WHERE 
		DATE_FORMAT(create_at,'%Y-%m') BETWEEN #{startDate} AND #{endDate}
	GROUP BY gu
	ORDER BY COUNT(*)
	</select>
    
    <select id="selectTopApartPrice" resultType="map">
    	SELECT 
			apt.apartments_name AS apartmentsName,
			apt.price AS price,
			apt.gu AS gu
		FROM apartments AS apt 
		INNER JOIN history_sale_contract AS hsc 
		on apt.apartments_no = hsc.apartments_no
		WHERE apt.gu = #{gu}
		GROUP by hsc.apartments_no 
		ORDER by apt.price desc
		limit 5
    </select>
    
    
    <!-- 크롤링한 청약 데이터 가져오기 -->
    <select id="selectCrawlingDataAllList" resultType="map">
    	SELECT
			subscription_no AS subscriptionNo,
			apartments_name AS apartmentsName,
			apartments_address AS apartmentsAddress,
			latitude ,
			longitude ,
			apartments_subscription_date ASapartmentsSubscriptionDate
		FROM crawling_data
    </select>
    <!-- 특정 청약 데이터 가져오기 -->
    <select id="subscriptionNoSelect" resultType="map">
    	SELECT
			subscription_no AS subscriptionNo,
			apartments_name AS apartmentsName,
			apartments_address AS apartmentsAddress,
			latitude ,
			longitude ,
			apartments_subscription_date ASapartmentsSubscriptionDate
		FROM 
			crawling_data
		WHERE 
			subscription_no = #{subscriptionNo}
    </select>
</mapper>